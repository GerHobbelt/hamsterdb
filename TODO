 
I Am Legend:

Items are sorted by priority (highest on top).
o a pending  TODO item (for the current release)
. a pending  TODO item (for future releases)
x a finished TODO item

-----------------------------------------------------------------------------

x precompiled windows libraries: hamserver-x.x.x.dll is still version 1.1.5
    x same for hamsterdb.spec

x (mail from Mark) - currently, hamsterdb does not release memory properly
    cache_get_unused_page rarely returns a good hit, usually returns 0
    therefore the cache grows and grows and grows

    current things to look at:
        x i extended cache_check_integrity, but it fails; the totallist_tail
            is not always updated correctly
        x cache_get_unused_page loops from tail to next to head, but it should
            be tail -> prev -> head
    x check performance and memory consumption
        x against 1.1.8
        x against 1.1.9
        x against modified cache replacement (cache_get_unused_page does not
            loop, but always picks oldest unused page)
        x remove more than one page from the cache (10% or 20% of the pages)
    x db1.c is messed up - replace with the original one!
    x check unittests

    x do more benchmarks; 20% is better when inserting sequentially, but what
        about random access?

x (mail from Mark) - the index page is not correctly logged when it's modified
    after an SMO (i.e. root page split or root collapse).
    x analyze and fix this issue
    x create unittests which verify this behavior (i.e. recover after a page
        split and check if the keys are all reachable)
    x same about eraseing items and merging pages/collapsing root page

x when HAM_NEEDS_RECOVERY is returned, hamsterdb closes the Env 
    (hamsterdb.c:1883) and also clears the logfile, and they're lost
    x add unittest

x (mail from Mark) - lessfs with mp3 collection 
    x investigate his files (before and after recovery)
    x review the blob routines for "big" blobs - what could go wrong?
        (nothing obviously, but they cannot be undone)
    x debug into his broken files - why is db #8 empty? is the root page
        garbage? - no, the duplicate table is empty (all zeroes)
    x fix it - my guess is that the page modifications are logged, but the
        blobs not. after the crash all operations in the index are undone, but 
        the blobs will stay (including duplicate table changes etc)
        x if logging is enabled: always go through the log, unless a page is
            allocated from raw disk (space was not used before), or allocated
            from the freelist, and the freelist modification was not in the
            current txn (but i don't know if this information is available)
        x when reading: if the page is in the cache then ALWAYS use it!
        x use a test with 1.1.9 to verify that direct i/o is used when
            overwriting big or normal blobs, even if logging is enabled
            --> no, it's not used!
    x try to reproduce and copy the before/after files

x mail from mark - surprise shutdown and recovery sometimes fails
    x reproduction is simple
    x flush cache only between transactions (after commit or abort)
    x there are some regressions (LogTest)
    x move env_purge_cache to env.c
    x when STRICT then flush more cache than necessary!
        -> also flush when abort fails with CACHE_TOO_BIG!
    x LogTest: why are there so many gaps in the LSNs?

x compare performance to 1.1.9 - yes, it's similar

x compare memory consumption to 1.1.9 (w/ lessfs) - less than before!

x a new flag which enables flushes (fdatasync()) after commit/abort
    -> or better re-use HAM_WRITE_THROUGH

o release 1.1.10

o review DB_NEW_PAGE_DOES_THRASH_CACHE - the cache age is not really used,
    therefore this flag is most likely not required 

o review statistics - the "cost" management; is this really in use? where?

------------------------------------------------------------

o what about a HAM_RMW flag for ham_insert - it will do a read/modify/write
    operation if the record already exists; but how can we propagate a callback
    for this? 
    o empty/small/tiny records
    o large records
    o in-memory records
    o unittests
    o documentation in header file
    o documentation in wiki

o release new .NET wrapper with fix from a.todorov (-> nabble)
    x move to github
    . add server functionality

. add automatic code coverage using gconv
    http://www.manpagez.com/man/1/gcov/
    http://gcc.gnu.org/onlinedocs/gcc/Gcov.html
    http://aleccolocco.blogspot.com/2009/08/sqlite-lesson-in-low-defect-software.html (section "Test Coverage with GCC")
    o track coverage results, publish online
    o gui tools: http://code.google.com/p/trucov/,
                 http://sourceforge.net/projects/ggcov/files/ 

. remove HAM_HINT_UBER_FAST_ACCESS, HAM_HINT_RANDOM_ACCESS, 
	HAM_HINT_SEQUENTIAL?

. unix daemon/windows service
    o new option to set the working directory
    o new option to set the username

. more server stuff
    o add acceptance tests

. more server stuff
    o how could we do authentication?
    . support https?

. disable local client?
    o need configure switch to disable the local client
        -> also clean up db.h, env.h...
    o add tests for --disable-remote and --disable-local to release.sh

. remove the garbage-list from the cache - it's not used

-----------------------------------------------------------------------------

o update the Python API 

x move to github

. add server functionality

-----------------------------------------------------------------------------

o update the java API 

x move to github

o add server functionality

=======================================================================

o how can we support the following environments
	o threadx
	o vxworks
	o qnx
	o opencl
	o montavista
	o nokia/intel embedded linux
	. openwrt
	. tron
	. itron
	. microitron
	. android
	x wince
	-> and how can we automatically test them? 

. pure java network client

. WinCE: create and run Unittests project
    http://msexchangeteam.com/archive/2004/02/23/78930.aspx
    o also, we could use mmap (which is currently disabled)

. some tests in filter.cpp are deactivated - fix them

. run profiling for duplicate tests - can things be improved?
    o blob_overwrite/duplicate table handling: in some cases we can use
        HAM_DIRECT_ACCESS to speed up things (at least for in-memory)

. webpage changes
    http://www.purenetworks.com/
    http://www.omegathemes.com/tf/smartages/#
    http://eucalyptus.com/
    http://www.pctools.com/de
    x the header page image is too large
    o frontpage: have multiple images (scrolling in background) with more
        text info? 
        http://malsup.com/jquery/cycle/basic.html
        http://www.sohtanaka.com/web-design/examples/image-slider/
        http://www.slidedeck.com/
    o sitemap: pulldown with jquery
    o download: need download gates to track in analytics as goals
    o rss feed

. evaluate if we can use bamboo for building and testing on multiple
    platforms
    o http://www.atlassian.com/software/bamboo/features/elastic.jsp#remote
    o install server
    o setup several agents (win32, win64, linux x86, linux x86_64, ...) and
        run either all or only some of the tests, including valgrind!

o need tool to upgrade databases from 1.0.x to 1.1.x!

. ham_get_parameter: could return VERSION of the database

. approx. matching: need a sample

. Ger: can specify an initial file size

. merge threadsafe code

. HighLevelTxnTest::rollbackHugeBlobTest is inactive because huge blobs are
    directly written to disk instead of going through the cache -> in case of
    a txn_abort, these blobs are not reallocated

. win32: check Ger's solution - he can handle multiple msvc versions

. Perl wrapper

. PHP wrapper


